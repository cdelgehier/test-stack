---
shared:
  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-source-and-config
    platform: linux
    image_resource:
      type: registry-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
      - name: merged-stack
        path: "merged-stack"


groups:
  - name: create
    jobs:
      - terraform-plan
      - terraform-apply
  - name: destroy
    jobs:
      - terraform-destroy

resource_types:
  - name: terraform
    type: registry-image
    source:
      repository: cycloid/terraform-resource
      tag: ((terraform_version))

resources:
  - name: tfstate
    type: terraform
    icon: terraform
    source:
      env_name: ((env))
      backend_type: http
      backend_config:
        address: '($ api_url $)/inventory?jwt=($ inventory_jwt $)'
        skip_cert_verification: true
      vars:
        #! terraform vars
        # All your terraform variables fetched from the form should go there.
        # the key should equals the variable name in the terraform module
        # the value should be whatever variable populates it from the form
        # example:
        #   aws_account_id: ((account_id))
        #
        # This will populate the tf_var aws_account_id (value of the key),
        # with the form value of account_id (value from the form entry that has key: account_id)
        aws_account_id: ((aws_account_id))
        aws_region: ((aws_region))
        instance_name: ((instance_name))
        ami: ((ami))
        instance_type: ((instance_type))
        vpc_security_group_ids: ((vpc_security_group_ids))
        subnet_id: ((subnet_id))
        root_block_device_size: ((root_block_device_size))
        root_block_device_type: ((root_block_device_type))
        ebs_block_device_map: ((ebs_block_device_map))
        enable_termination_protection: ((enable_termination_protection))
        enable_shutdown_protection: ((enable_shutdown_protection))
        # create_security_group: ((create_security_group))
        # security_group_ingress_rules: ((security_group_ingress_rules))
        # security_group_egress_rules: ((security_group_egress_rules))
        #! tags
        aws_env: ((app_env))  # aws_env is more defined in tagging  v2
        aws_id: ((aws_id))
        app_project: ((app_project))
        app_name: ((app_name))
        app_code: ((app_code))
        app_env: ((app_env))
        archiving: ((archiving))
        backup: ((backup))
        data_classification: ((data_classification))
        iam_instance_profile: ((iam_instance_profile))
        key_pair: ((key_pair))
        kms_key_id: ((kms_key_id))
        msp: ((msp))
        extra_tags: ((extra_tags))
        #! pipeline vars
        aws_cred: ((s3-backend-for-terraform-state-files))
        env: ((env))
        project: ((project))
        customer: ((customer))

  # The Terraform stack (will be merged with the config)
  - name: stack-source
    type: git
    icon: git
    source:
      uri: ((stack_git_repository))
      branch: ((stack_git_branch))
      username: ((stack_git_username))
      password: ((stack_git_password))
      paths:
        - ((stack_terraform_path))/*

  # The Terraform config (will be merged with the stack)
  - name: stack-config
    type: git
    icon: git
    source:
      uri: ((config_git_repository))
      branch: ((config_git_branch))
      username: ((config_git_username))
      password: ((config_git_password))
      paths:
        - ((config_terraform_path))/*

jobs:

  # Merge and trigger a plan whenever there is a commit in Terraform stack or config
  - name: terraform-plan
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: stack-source
            trigger: true
          - get: stack-config
            trigger: true

          - task: merge-stack-source-and-config
            config:
              <<: *merge-stack-source-and-config
              inputs:
                - name: stack-config
                  path: "config"
                - name: stack-source
                  path: "stack"
            params:
              CONFIG_PATH: ((config_terraform_path))
              STACK_PATH: ((stack_terraform_path))


          - put: tfstate
            params:
              plan_only: true
              terraform_source: merged-stack/

  # Merge and trigger an apply manually (no autostart of this job)
  - name: terraform-apply
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: stack-source
            trigger: false
            passed:
              - terraform-plan
          - get: stack-config
            trigger: false
            passed:
              - terraform-plan
          - get: tfstate
            trigger: false
            passed:
              - terraform-plan

          - task: merge-stack-source-and-config
            config:
              <<: *merge-stack-source-and-config
              inputs:
                - name: stack-config
                  path: "config"
                - name: stack-source
                  path: "stack"
            params:
              CONFIG_PATH: ((config_terraform_path))
              STACK_PATH: ((stack_terraform_path))

          - put: tfstate
            params:
              plan_run: true
              terraform_source: merged-stack/

  - name: terraform-destroy
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: stack-source
            trigger: false
          - get: stack-config
            trigger: false
          - task: merge-stack-source-and-config
            config:
              <<: *merge-stack-source-and-config
              inputs:
                - name: stack-config
                  path: "config"
                - name: stack-source
                  path: "stack"
            params:
              CONFIG_PATH: ((config_terraform_path))
              STACK_PATH: ((stack_terraform_path))


          - put: tfstate
            params:
              action: destroy
              terraform_source: merged-stack/
            get_params:
              action: destroy
...
